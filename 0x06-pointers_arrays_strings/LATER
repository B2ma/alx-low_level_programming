#include "main.h"

/**
  * infinite_add -  adds two numbers
  * @n1: text representation of 1st number to add
  * @n2: text representation of 2nd number to add
  * @size_r: buffer size
  * @r: pointer to buffer
  * Return: pointer to calling function
  */
char *infinite_add(char *n1, char *n2, char *r, int size_r)
{
	int i, j, k, len, overflow = 0;
	int digit1, digit2, sum;

	for (len = 0; n1[len] != '\0'; len++)
		;
	for (j = 0; n2[j] != '\0'; j++)
		;
	for (i = len - 1, j = j - 1, k = size_r - 2; i >= 0 || j >= 0; i--, j--, k--)
	{
		digit1 = (i >= 0) ? (n1[i] - '0') : 0;
		digit2 = (j >= 0) ? (n2[j] - '0') : 0;
		sum = digit1 + digit2 + overflow;
		if (k < 0)
			return (0);
		r[k] = (sum % 10) + '0';
		overflow = sum / 10;
	}
	if (overflow != 0)
	{
		if (k < 0)
			return (0);
		r[k] = overflow + '0';
		k--;
	}
	if (k < 0)
		return (0);
	r[size_r - 1] = '\0';
	for (i = 0; i <= k; i++)
		r[i] = r[i + (size_r - k - 1)];
	return (r);
}
